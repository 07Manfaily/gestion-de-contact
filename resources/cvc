import React from "react";
import ReactDOM from "react-dom";
import Graph from "react-graph-vis";


function graphVis() {
  const graph = {
    nodes : [
        { id: 2, value: 10, label: "Alston" },
        { id: 3, value: 12, label: "Barney" },
        { id: 4, value: 16, label: "Coley" },
        { id: 5, value: 17, label: "Grant" },
        { id: 6, value: 15, label: "Langdon" },
        { id: 7, value: 6, label: "Lee" },
        { id: 8, value: 5, label: "Merlin" },
        { id: 9, value: 30, label: "Mick" },
        { id: 10, value: 8, label: "Tod" },
      ],
  
      // create connections between people
      // value corresponds with the amount of contact between two people
      edges : [
        { from: 2, to: 8, value: 3 },
        { from: 2, to: 9, value: 5 },
        { from: 2, to: 10, value: 1 },
        { from: 4, to: 6, value: 8 },
        { from: 5, to: 7, value: 2 },
        { from: 4, to: 5, value: 1 },
        { from: 9, to: 10, value: 2 },
        { from: 2, to: 3, value: 6 },
        { from: 3, to: 9, value: 4 },
        { from: 5, to: 3, value: 1 },
        { from: 2, to: 7, value: 4 },
        { from: 2, to: 2, value: 2 },
        { from: 4, to: 2, value: 3 },
      ]
  };

  const options = {
    nodes: {
      shape: "dot",
      scaling: {
        customScalingFunction: function (min, max, total, value) {
          return value / total;
        },
        min: 5,
        max: 150,
      },
      font: {
        size: 14,
      },
      borderWidth: 2, 
  color: {
    border: "yellow", 
  },
    },
    edges: {
      arrows: {
        to: {
          enabled: true,
          scaleFactor: 1,
          type: "arrow",
          color: "green", // Couleur de la flèche sortante
        },
        from: {
        
          scaleFactor: 1,
          type: "arrow",
          color: "red", // Couleur de la flèche entrante
        },
        },
        shadow: false,
    },
    interaction: {
      hover: true,
    },
    height: "700px",
    width: "900px"
  };

  const events = {
    select: function(event) {
      var { nodes, edges } = event;
    }
  };
  return (
    <Graph
      graph={graph}
      options={options}
      events={events}
    //   getNetwork={network => {
       
    //   }}
    />
  );
}
export default graphVis;
